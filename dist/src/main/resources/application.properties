# General Spring configuration; enable graceful shutdown with a timeout per phase
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s
logging.register-shutdown-hook=true
# REST server configuration
# This sever is enabled even for a standalone broker without any embedded gateway, in which case
# there will simply be no endpoints available.
server.address=0.0.0.0
server.port=8080
# Enable a richer error model for the REST server
spring.webflux.problemdetails.enabled=true
# Embedded HTTP server configuration for monitoring
# Defaults are picked from the previous Zeebe specific defaults for backwards compatibility
management.server.port=9600
management.server.address=0.0.0.0
# Explicitly disable SSL on the management server to prevent any REST API server
# SSL configuration from being implicitly applied to it
management.server.ssl.enabled=false
# WebFlux/Reactor configuration
# Disable the default resource mappings (e.g. service static assets)
spring.web.resources.add-mappings=false
spring.reactor.netty.shutdown-quiet-period=1s
# General management configuration; disable all endpoints by default but exposes all enabled ones
# via web. Endpoints should be enabled individually based on the target application
management.endpoints.enabled-by-default=false
management.endpoints.web.exposure.include=*
# Health configuration; disable default health indicators. As it's unclear how to do this globally,
# only the ones which currently would get enabled are explicitly disabled.
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
# Metrics related configurations
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
# Allow runtime configuration of log levels
management.endpoint.loggers.enabled=true
# Allow viewing the config properties, but sanitize their outputs
management.endpoint.configprops.enabled=true
management.endpoint.configprops.show-values=always
management.endpoint.info.enabled=true
# Define keywords to sanitize in applicable endpoints; this will be applied to the configprops,
# beans, and if enabled, the environment endpoint as well
management.sanitize.keywords=user,pass,secret,accessKey,accountKey,connectionString
# Disable specific autoconfiguration classes which are triggered automatically (e.g. creating an
# Elastic client which spawns 16 threads)
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration, \
  org.springframework.boot.actuate.autoconfigure.security.reactive.ReactiveManagementWebSecurityAutoConfiguration, \
  org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration, \
  org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration, \
  org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration, \
  org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration
spring.thymeleaf.check-template-location=false